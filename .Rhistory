library(ggplot2)
# read the dataset
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the structure and dimensions of the data
str(hd)
str(gii)
dim(hd)
dim(gii)
# create summary
summary(hd)
summary(gii)
# change the column names
colnames(hd) <- c("hdir", "cty", "hdi", "lifebirth", "edutime", "meanedu", "gni", "gnirhdir")
colnames(gii) <- c("giir", "cty", "gii", "mortalityM", "teenbirth", "ParF", "edu2F", "edu2M", "labF", "labM")
# check the change
summary(hd)
summary(gii)
# define two new columns
gii <- mutate(gii, eduRatio = edu2F / edu2M)
gii <- mutate(gii, labRatio = labF / labM)
# glimpse at the new data
glimpse(gii)
# common columns to use as identifiers
join_by <- c("cty")
# join the two datasets by the selected identifiers
human <- inner_join(hd, gii, by = join_by)
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# columns to keep
keep <- c("cty", "eduRatio", "labRatio", "lifebirth", "edutime", "gni", "mortalityM", "teenbirth", "ParF")
# select the 'keep' columns
human <- select(human, one_of(keep))
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human) == TRUE)
# look at the last 10 observations of human
tail(human, 10)
# choose everything until the last 7 observations
human_ <- human[1:188, ]
# add countries as rownames
rownames(human_) <- human_$cty
# remove the Country variable
human_ <- select(human, -cty)
human_
rownames(human_) <- human_$cty
human_
human_ <- human[1:188, ]
human_
rownames(human_) <- human_$cty
human_
human_ <- select(human, -cty)
human_
write.table(human_, file = "data/human2.txt")
# access the dplyr, tidyr and ggplot2 library
library(dplyr)
library(tidyr)
library(ggplot2)
# read the dataset
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the structure and dimensions of the data
str(hd)
str(gii)
dim(hd)
dim(gii)
# create summary
summary(hd)
summary(gii)
# change the column names
colnames(hd) <- c("hdir", "cty", "hdi", "lifebirth", "edutime", "meanedu", "gni", "gnirhdir")
colnames(gii) <- c("giir", "cty", "gii", "mortalityM", "teenbirth", "ParF", "edu2F", "edu2M", "labF", "labM")
# check the change
summary(hd)
summary(gii)
# define two new columns
gii <- mutate(gii, eduRatio = edu2F / edu2M)
gii <- mutate(gii, labRatio = labF / labM)
# glimpse at the new data
glimpse(gii)
# common columns to use as identifiers
join_by <- c("cty")
# join the two datasets by the selected identifiers
human <- inner_join(hd, gii, by = join_by)
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# columns to keep
keep <- c("cty", "eduRatio", "labRatio", "lifebirth", "edutime", "gni", "mortalityM", "teenbirth", "ParF")
# select the 'keep' columns
human <- select(human, one_of(keep))
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human) == TRUE)
# look at the last 10 observations of human
tail(human_, 10)
# choose everything until the last 7 observations
human_ <- human_[1:188, ]
# add countries as rownames
rownames(human_) <- human_$cty
# choose everything until the last 7 observations
human_ <- human_[1:155, ]
# add countries as rownames
rownames(human_) <- human_$cty
# remove the Country variable
human_ <- select(human, -cty)
human_
# access the dplyr, tidyr and ggplot2 library
library(dplyr)
library(tidyr)
library(ggplot2)
# read the dataset
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the structure and dimensions of the data
str(hd)
str(gii)
dim(hd)
dim(gii)
# create summary
summary(hd)
summary(gii)
# change the column names
colnames(hd) <- c("hdir", "cty", "hdi", "lifebirth", "edutime", "meanedu", "gni", "gnirhdir")
colnames(gii) <- c("giir", "cty", "gii", "mortalityM", "teenbirth", "ParF", "edu2F", "edu2M", "labF", "labM")
# check the change
summary(hd)
summary(gii)
# define two new columns
gii <- mutate(gii, eduRatio = edu2F / edu2M)
gii <- mutate(gii, labRatio = labF / labM)
# glimpse at the new data
glimpse(gii)
# common columns to use as identifiers
join_by <- c("cty")
# join the two datasets by the selected identifiers
human <- inner_join(hd, gii, by = join_by)
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# columns to keep
keep <- c("cty", "eduRatio", "labRatio", "lifebirth", "edutime", "gni", "mortalityM", "teenbirth", "ParF")
# select the 'keep' columns
human <- select(human, one_of(keep))
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human) == TRUE)
# look at the last 10 observations of human
tail(human_, 10)
# choose everything until the last 7 observations
human_ <- human_[1:155, ]
# add countries as rownames
rownames(human_) <- human_$cty
# remove the Country variable
human_ <- select(human, -cty)
human_
# Saving the analysis daatset, name it as human.txt, under the data folder
write.table(human_, file = "data/human.txt")
human_
human_ <- filter(human, complete.cases(human) == TRUE)
tail(human_, 10)
human_ <- human_[1:155, ]
human_
rownames(human_) <- human_$cty
human_
human_ <- select(human, -cty)
human_
## Wenzhong Zhang
## 28th November 2017
## Updated 03rd December 2017
## Data wrangling exercise for Human data
# access the dplyr, tidyr and ggplot2 library
library(dplyr)
library(tidyr)
library(ggplot2)
# read the dataset
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the structure and dimensions of the data
str(hd)
str(gii)
dim(hd)
dim(gii)
# create summary
summary(hd)
summary(gii)
# change the column names
colnames(hd) <- c("hdir", "cty", "hdi", "lifebirth", "edutime", "meanedu", "gni", "gnirhdir")
colnames(gii) <- c("giir", "cty", "gii", "mortalityM", "teenbirth", "ParF", "edu2F", "edu2M", "labF", "labM")
# check the change
summary(hd)
summary(gii)
# define two new columns
gii <- mutate(gii, eduRatio = edu2F / edu2M)
gii <- mutate(gii, labRatio = labF / labM)
# glimpse at the new data
glimpse(gii)
# common columns to use as identifiers
join_by <- c("cty")
# join the two datasets by the selected identifiers
human <- inner_join(hd, gii, by = join_by)
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# columns to keep
keep <- c("cty", "eduRatio", "labRatio", "lifebirth", "edutime", "gni", "mortalityM", "teenbirth", "ParF")
# select the 'keep' columns
human <- select(human, one_of(keep))
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human) == TRUE)
# look at the last 10 observations of human
tail(human_, 10)
# choose everything until the last 7 observations
human_ <- human_[1:155, ]
# add countries as rownames
rownames(human_) <- human_$cty
# remove the Country variable
human_ <- dplyr::select(human, -cty)
human_
human_
human_ <- dplyr::select(human_, -cty)
## Wenzhong Zhang
## 28th November 2017
## Updated 03rd December 2017
## Data wrangling exercise for Human data
# access the dplyr, tidyr and ggplot2 library
library(dplyr)
library(tidyr)
library(ggplot2)
# read the dataset
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore the structure and dimensions of the data
str(hd)
str(gii)
dim(hd)
dim(gii)
# create summary
summary(hd)
summary(gii)
# change the column names
colnames(hd) <- c("hdir", "cty", "hdi", "lifebirth", "edutime", "meanedu", "gni", "gnirhdir")
colnames(gii) <- c("giir", "cty", "gii", "mortalityM", "teenbirth", "ParF", "edu2F", "edu2M", "labF", "labM")
# check the change
summary(hd)
summary(gii)
# define two new columns
gii <- mutate(gii, eduRatio = edu2F / edu2M)
gii <- mutate(gii, labRatio = labF / labM)
# glimpse at the new data
glimpse(gii)
# common columns to use as identifiers
join_by <- c("cty")
# join the two datasets by the selected identifiers
human <- inner_join(hd, gii, by = join_by)
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# columns to keep
keep <- c("cty", "eduRatio", "labRatio", "lifebirth", "edutime", "gni", "mortalityM", "teenbirth", "ParF")
# select the 'keep' columns
human <- select(human, one_of(keep))
# explore the structure and dimensions of the data
str(human)
dim(human)
glimpse(human)
# print out a completeness indicator of the 'human' data
complete.cases(human)
# print out the data along with a completeness indicator as the last column
data.frame(human[-1], comp = complete.cases(human))
# filter out all rows with NA values
human_ <- filter(human, complete.cases(human) == TRUE)
# look at the last 10 observations of human
tail(human_, 10)
# choose everything until the last 7 observations
human_ <- human_[1:155, ]
# add countries as rownames
rownames(human_) <- human_$cty
# remove the Country variable
human_ <- dplyr::select(human_, -cty)
human_
str(human_)
dim(human_)
glimpse(human_)
write.table(human_, file = "data/human.txt")
write.table(human_, file = "Data/human.txt")
glimpse(human_)
str(human_)
write.table(human_, file = "Data/human.txt")
write.table(human_, file = "Data/human.txt")
setwd("C:/Users/Wenzhong/Desktop/IODS-project")
write.table(human_, file = "Data/human.txt")
read.table("Data\human.txt")
read.table("Data/human.txt")
human <- read.table("Data/human.txt")
str(human)
dim(human)
library(corrplot)
library(tidyverse)
library(dplyr)
library(tidyr)
pairs(human)
summary(human)
cor_matrix <- cor(human)
cor_matrix <- cor(human)
cor(human) %>% corrplot(method="color", order="hclust", type = "upper", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, title = "Correlation plots for human", mar=c(0,0,1,0))
human <- data.frame(human)
cor(human) %>% corrplot(method="color", order="hclust", type = "upper", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, title = "Correlation plots for human", mar=c(0,0,1,0))
str(human)
library(GGally)
cor(human) %>% corrplot(method="color", order="hclust", type = "upper", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, title = "Correlation plots for human", mar=c(0,0,1,0))
human <- unfactor(human)
install.packages("varhandle")
library(varhandle)
human <- unfactor(human)
cor(human) %>% corrplot(method="color", order="hclust", type = "upper", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, title = "Correlation plots for human", mar=c(0,0,1,0))
human
human$gni <- unfactor(human$gni)
human$gni <- as.numeric(human$gni)
cor(human) %>% corrplot(method="color", order="hclust", type = "upper", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, title = "Correlation plots for human", mar=c(0,0,1,0))
human <- as.numeric(human)
human <- read.table("Data/human.txt", stringsAsFactors=FALSE)
str(human)
human <- read.table("Data/human.txt", stringsAsFactors = FALSE)
str(human)
?read.table
human <- read.table("Data/human.txt", colClasses = as.numeric)
str(human)
human <- read.table("Data/human.txt", colClasses = as.numeric(as.character()))
str(human)
human <- as.numeric(as.character(human))
human
human <- read.table("Data/human.txt")
str(human)
dim(human)
library(corrplot)
library(tidyverse)
library(dplyr)
library(tidyr)
library(GGally)
pairs(human)
summary(human)
human <- within(human, {
gni <- as.numeric(as.character(gni))
str(human)
dim(human)
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.numeric(as.character(gni))
})
str(human)
dim(human)
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.numeric(as.character(gni))
})
str(human)
dim(human)
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.numeric(as.character(gni))
})
str(human)
dim(human)
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.character(gni)
})
str(human)
dim(human)
human <- within(human, {
gni <- as.numeric(gni)
})
str(human)
?as.numeric
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.character(gni)
})
human <- within(human, {
gni <- as.numeric(gni, sub(",", "", Input, fixed = TRUE))
})
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.character(gni)
})
human <- within(human, {
gni <- as.numeric(sub(",", "", fixed = TRUE))
})
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.character(gni)
})
human <- within(human, {
gni <- as.numeric(sub(gni, ",", "", fixed = TRUE))
})
human <- read.table("Data/human.txt")
human <- within(human, {
gni <- as.character(gni)
})
human <- within(human, {
gni <- as.numeric(sub(",", "", gni, fixed = TRUE))
})
str(human)
dim(human)
library(corrplot)
library(tidyverse)
library(dplyr)
library(tidyr)
library(GGally)
pairs(human)
summary(human)
cor(human) %>% corrplot(method="color", order="hclust", type = "upper", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, title = "Correlation plots for human", mar=c(0,0,1,0))
pca_human <- prcomp(human)
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(2, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 2), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:1, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
biplot(pca_human, choices = 1:2, cex = c(0.5, 1), col = c("grey40", "deeppink2"))
pca_human <- prcomp(human)
s <- summary(pca_human)
s
pca_pr <- round(100*s$importance[2, ], digits = 1)
pca_pr
pc_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
summary(human_std)
human_std <- scale(human)
summary(human_std)
pca_human_std <- prcomp(human_std)
s <- summary(pca_human_std)
s
pca_human_std <- prcomp(human_std)
s2 <- summary(pca_human_std)
s2
pca_human_std <- prcomp(human_std)
s2 <- summary(pca_human_std)
s2
pca_pr_std <- round(100*s$importance[2, ], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr), " (", pca_pr_std, "%)")
biplot(pca_human_std, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab_std[1], ylab = pc_lab_std[2])
biplot(pca_human_std, cex = c(0.5, 1), col = c("grey40", "deeppink2"), xlab = pc_lab_std[1], ylab = pc_lab_std[2])
biplot(pca_human_std, cex = c(0.5, 0.8), col = c("grey40", "deeppink2"), xlab = pc_lab_std[1], ylab = pc_lab_std[2])
pca_pr_std <- round(100*s2$importance[2, ], digits = 1)
pca_pr_std
pc_lab_std <- paste0(names(pca_pr), " (", pca_pr_std, "%)")
biplot(pca_human_std, cex = c(0.5, 0.8), col = c("grey40", "deeppink2"), xlab = pc_lab_std[1], ylab = pc_lab_std[2])
install.packages("FactoMineR")
str(tea)
library(FactoMineR)
str(tea)
tea <- data(tea)
str(tea)
dim(tea)
data(tea)
str(tea)
str(tea)
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 10, size = 8))
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 18))
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
keep_columns <- c("Tea", "escape-exoticism", "spirituality", "healthy", "diuretic", "friendliness", "sophisticated", "slimming", "exciting", "relaxing", "effect.on.health")
tea_type_reason <- select(tea, one_of(keep_columns))
summary(tea_type_reason)
str(tea_type_reason)
keep_columns <- c("Tea", "escape.exoticism", "spirituality", "healthy", "diuretic", "friendliness", "sophisticated", "slimming", "exciting", "relaxing", "effect.on.health")
tea_type_reason <- select(tea, one_of(keep_columns))
summary(tea_type_reason)
str(tea_type_reason)
gather(tea_type_reason) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
mca <- MCA(tea_type_reason, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
plot(mca, invisible=c("ind"), habillage = "quali")
install.packages("knitr")
