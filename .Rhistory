setwd("~/")
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header = T)
#explore the structure of the data
str(learning2014)
#explore the dimension of the data
dim(learning2014)
#access the dplyr library
library(dplyr)
install.packages("dplyr")
#access the dplyr library
library(dplyr)
ead.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header = T)
#explore the structure of the data
str(learning2014)
#explore the dimension of the data
dim(learning2014)
#The dimension of the data is 183 * 60, with 60 variables and 183 responses
#Most of the data are interger values, only the gender variable is two levels factor
#access the dplyr library
library(dplyr)
#choose the columns
selected_columns <- c("gender", "age", "attitude", "deep", "stra", "surf", "points")
# select the 'selected_columns' to create a new dataset
learning2014_selected <- select(learning2014, one_of(selected_columns))
# select the 'selected_columns' to create a new dataset
learning2014_selected <- select(learning2014, one_of(selected_columns))
#choose the columns
selected_columns <- c("gender", "Age", "Attitude", "deep", "stra", "surf", "points")
# select the 'selected_columns' to create a new dataset
learning2014_selected <- select(learning2014, one_of(selected_columns))
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header = T)
#explore the structure of the data
str(learning2014)
#explore the dimension of the data
dim(learning2014)
#The dimension of the data is 183 * 60, with 60 variables and 183 responses
#Most of the data are interger values, only the gender variable is two levels factor
#access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(learning2014, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(learning2014, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(learning2014, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#choose the columns
selected_columns <- c("gender", "Age", "Attitude", "deep", "stra", "surf", "Points")
# select the 'selected_columns' to create a new dataset
learning2014_selected <- select(learning2014, one_of(selected_columns))
#Wenzhong Zhang
#11th Nov 2017
#Data wrangling of learning2014 dataset
#read the dataset
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header = T)
#explore the structure of the data
str(learning2014)
#explore the dimension of the data
dim(learning2014)
#The dimension of the data is 183 * 60, with 60 variables and 183 responses
#Most of the data are interger values, only the gender variable is two levels factor
#access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
#choose the columns
selected_columns <- c("gender", "Age", "Attitude", "deep", "stra", "surf", "Points")
# select the 'selected_columns' to create a new dataset
learning2014_selected <- select(learning2014, one_of(selected_columns))
#explore the structure of the new selected dataset
str(learning2014_selected)
# Wenzhong Zhang
# 11th Nov 2017
# Data wrangling of learning2014 dataset
# read the dataset
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header = T)
# explore the structure of the data
str(learning2014)
# explore the dimension of the data
dim(learning2014)
# The dimension of the data is 183 * 60, with 60 variables and 183 responses
# Most of the data are interger values, only the gender variable is two levels factor
# access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30", "D06", "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
# scaling the Attitude back to the original scale and save it as a new column named "attitude"
learning2014$attitude <- learning2014$Attitude / 10
# choose the columns
selected_columns <- c("gender", "Age", "attitude", "deep", "stra", "surf", "Points")
# select the 'selected_columns' to create a new dataset
learning2014_selected <- select(learning2014, one_of(selected_columns))
# explore the structure of the new selected dataset
str(learning2014_selected)
# scaling the combination variables back to the original scale, attitude/10
learning2014_selected <- filter(learning2014_selected, Points > 0)
# explore the structure of the updated selected dataset
str(learning2014_selected)
setwd("C:/Users/Wenzhong/Desktop/IODS-project")
?write.csv
write.table(learning2014_selected, file = "data/learning2014_selected.txt")
?read.table
# read the data and check for the validity
learning2014_selected_check <- read.table("data/learning2014_selected.txt")
learning2014_selected_check
# check the dataset
str(learning2014_selected_check)
head(learning2014_selected_check)
learning2014_selected <- read.table("data/learning2014_selected.txt")
pairs(learning2014_selected[-1], col = learning2014$gender)
p <- ggpairs(learning2014_selected, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
install.packages("GGally")
library(GGally)
library(ggplot2)
p <- ggpairs(learning2014_selected, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(learning2014_selected, mapping = aes(col = gender, alpha = 0.7), lower = list(combo = wrap("facethist", bins = 20)))
p
ggpairs(learning2014_selected, lower = list(combo = wrap("facethist", bins = 20)))
ggpairs(learning2014_selected, lower = list(combo = wrap("facethist", bins = 20)))
regression_trial1 <- lm(points ~ attitude + stra + surf, data = learning2014_selected)
regression_trial1 <- lm(Points ~ attitude + stra + surf, data = learning2014_selected)
```{r}
ggpairs(learning2014_selected, lower = list(combo = wrap("facethist", bins = 20)))
regression_trial1 <- lm(Points ~ attitude + stra + surf, data = learning2014_selected)
summary(regression_trial1)
par(mfrow = c(1,3))
plot(regression_trial2, which = c(1, 2, 5))
?plot
install.packages("shiny")
?selectInput
?shiny::selectInput
?shiny::renderPlot
